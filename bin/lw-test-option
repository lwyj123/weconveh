#!/usr/bin/env node

const program = require('commander')
const exists = require('fs').existsSync
const path = require('path')
const ora = require('ora')
const home = require('user-home')
const tildify = require('tildify')
const chalk = require('chalk')
const inquirer = require('inquirer')
const rm = require('rimraf').sync
const logger = require('../lib/logger')
// const checkVersion = require('../lib/check-version')
// const warnings = require('../lib/warnings')


/**
 * Usage.
 */

program
  .option('-f, --file <file-path>', 'output into a file')

/**
 * Help.
 */

program.on('--help', () => {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # load a file and output file option'))
  console.log('    $ lw-test option -f package.json')
  console.log()
})

/**
 * Help.
 */

function help () {
  program.parse(process.argv)
  if (program.args.length !== 0) return program.help()
  if (!program.file) return program.help()
}
help()

/**
 * Settings.
 */
console.log(program.args)
const filePath = path.resolve(program.file)

/**
 * Padding.
 */

console.log()
process.on('exit', () => {
  console.log()
})

if (exists(filePath)) {
  inquirer.prompt([{
    type: 'confirm',
    message: 'Target file exists. Continue?',
    name: 'ok'
  }]).then(answers => {
    if (answers.ok) {
      run()
    }
  }).catch(logger.fatal)
} else {
  run()
}

/**
 * Check, download and generate the project.
 */

function run () {
  logger.success('path: ', filePath)
}

